#!/usr/bin/env python3

import argparse
import pathlib
import mimetypes
import jinja2
import shutil
import json
import os

from zipfile import ZipFile
from ue_mecanique import load_excel, is_excel, render_markdown, extract_image


def main():
    mimetypes.init()

    parser = argparse.ArgumentParser(description="Convert excel file to markdown")
    parser.add_argument("file", type=pathlib.Path)
    parser.add_argument("-o", "--output-dir", type=pathlib.Path, required=True)
    parser.add_argument("-t", "--template", type=pathlib.Path, required=True)
    parser.add_argument("--tags", type=pathlib.Path, required=True)

    args = parser.parse_args()

    # Creating output directory
    args.output_dir.mkdir(parents=True, exist_ok=True)

    # Reading template
    with open(args.template) as fd:
        template = jinja2.Template(fd.read())

    # Reading tags
    with open(args.tags) as fh:
        tags = json.load(fh)

    # Generating the file
    file = args.file
    image_file = extract_image(file, args.output_dir)
    info = load_excel(file, comment="#", index_col=0).to_dict()

    if image_file is not None:
        info["image"] = dict(value=image_file.name)

    info["tags"] = tags[info["code"]["value"]]
    markdown = render_markdown(template, info)
    out_file = args.output_dir / (file.stem + ".md")

    with open(out_file, "w") as fd:
        fd.write(markdown)


if __name__ == "__main__":
    main()
